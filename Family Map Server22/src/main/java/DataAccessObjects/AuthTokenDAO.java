package DataAccessObjects;

import Models.*;
import java.sql.*;

/**
 * A class used for accessing the AuthToken table in the database.
 */
public class AuthTokenDAO {

  private Connection connection;
  public AuthTokenDAO(Connection connection) {this.connection = connection; }


  /**
   * Insert authToken in to SQL Database table
   * @param authToken
   * @return pass/error message
   */

  public void Insert(AuthToken authToken) throws DataAccessException
  {
    // make a string like a SQL command, the question mark means how many argument
    String sql = "INSERT INTO AuthToken (Username, Auth_Token) VALUES (?,?)";
    // PreparedStatment-An object that represents a precompiled SQL statement.
    try (PreparedStatement PS = connection.prepareStatement(sql))
    {
      PS.setString(1, authToken.getUsername());
      PS.setString(2, authToken.getAuthtoken());
      PS.executeUpdate();
    } catch (SQLException e) {
      throw new DataAccessException("Error encountered while inserting into the database");
    }
  }

  /**
   * find authToken in to SQL Database table
   * @param tokenKey
   * @return pass/error message
   */
  public AuthToken Find(String tokenKey) throws DataAccessException
  {
    // declare variable

    //A table of data representing a database result set, which is usually generated by executing a statement that queries the database
    ResultSet rs = null;
    // SQL String to SQL command
    String sql = "SELECT * FROM AuthToken WHERE Auth_Token = ?;";
    try (PreparedStatement PS = connection.prepareStatement(sql))
    {
      PS.setString(1, tokenKey);
      rs = PS.executeQuery();
      if (rs.next())
      {
        String Username = rs.getString(1);
        String authToken = rs.getString(2);
        AuthToken token = new AuthToken(Username,authToken);
        return token;
      }

    } catch (SQLException e)
    {
      e.printStackTrace();//The printStackTrace() method in Java is a tool used to handle exceptions and errors
      throw new DataAccessException("SQL Error in finding authToken function");
    } finally
    {
      if (rs != null)
      {
        try
        {
          rs.close();
        } catch (SQLException e) {
          e.printStackTrace();
        }
      }
    }
    return null;
  }

  //public String getUserName(User user) { return user.getUsername(); }
  //public String getPassword(User user) { return user.getPassword(); }
}
